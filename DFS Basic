/// Basic code that shoul know before DFS => (One of the most important) 
#include<bits/stdc++.h>
using namespace std;
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#define endl "\n"
#define ll long long
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
vector<vector<int>> vec;
vector<bool> bl;
void dfs(int n)
{
    cout<< n<< " ";
    bl[n] = true;
    for(auto u : vec[n]){
        if(!bl[u]){
            dfs(u);
        }
    }
}

int main()

{
    optimize();


    int n,m;
    cin>>n>>m;
    vec.resize(n+1);
    bl.resize(n+1);
    for(int i=0;i<m;i++){
        int u,v;cin>>u>>v;
        vec[u].push_back(v);
        vec[v].push_back(u);
    }

    dfs(1);


//    int n,m;
//    cin>>n>>m;
//    vector<vector<pair<int, int>>> pr(n + 1);
//    for(int i=0;i<m;i++){
//        int u,v,w;
//        cin>>u>> v >> w;
//        pr[u].push_back({v,w});
//        pr[v].push_back({u,w});
//
//    }
//    for(int i=1;i<=n;i++){
//        cout<< "For node "<< i<< " : ";
//        for(auto u:pr[i]){
//            cout<< "( " << u.first << " => " << u.second<< " ) ";
//        }
//        cout<< endl;
//    }















//    int m,n;cin>>n>>m;
//    vector<vector<int>>lst(n+1);
//    for(int i=0;i<m;i++){
//        int u,v;
//        cin>> u>> v;
//        lst[u].push_back(v);
//        lst[v].push_back(u);
//    }
//    for(int i=1;i<=n;i++){
//        cout<< "For " << i<< " :  ";
//        for(auto u:lst[i]){
//            cout<< u<< " ";
//        }
//        cout<< endl;
//
//    }



	return 0;
}




